#include "catch.hpp"
#include "../runtime/bitstring.hpp"

using namespace Vlinder::Rubicon;

TEST_CASE( "Default-constructed BitStrings are empty", "[bitstring]" )
{
    BitString bit_string;

    REQUIRE(bit_string.empty());
    REQUIRE(bit_string.size() == 0);
    REQUIRE(bit_string.begin() == bit_string.end());
}
TEST_CASE( "BitStrings can be sized and resized", "[bitstring]" ) {

    BitString bit_string( 5 );

    REQUIRE( bit_string.size() == 5 );
    REQUIRE( bit_string.capacity() >= 5 );

    SECTION( "resizing bigger changes size and capacity" ) {
        bit_string.resize( 10 );

        REQUIRE( bit_string.size() == 10 );
        REQUIRE( bit_string.capacity() >= 10 );
    }
    SECTION( "resizing smaller changes size but not capacity" ) {
        bit_string.resize( 0 );

        REQUIRE( bit_string.size() == 0 );
        REQUIRE( bit_string.capacity() >= 5 );
    }
    SECTION( "reserving bigger changes capacity but not size" ) {
        bit_string.reserve( 10 );

        REQUIRE( bit_string.size() == 5 );
        REQUIRE( bit_string.capacity() >= 10 );
    }
    SECTION( "reserving smaller does not change size or capacity" ) {
        bit_string.reserve( 0 );

        REQUIRE( bit_string.size() == 5 );
        REQUIRE( bit_string.capacity() >= 5 );
    }
}
SCENARIO( "when constructed by code as generated by the generator", "[bitstring]" )
{
	GIVEN( "a BitString with some value" )
	{
		BitString test_value({150, 233, 101, 84, 29, 112}, 4);

		REQUIRE( test_value.size() == 44 );
		REQUIRE( test_value[ 0] == 1 );
		REQUIRE( test_value[ 1] == 0 );
		REQUIRE( test_value[ 2] == 0 );
		REQUIRE( test_value[ 3] == 1 );
		REQUIRE( test_value[ 4] == 0 );
		REQUIRE( test_value[ 5] == 1 );
		REQUIRE( test_value[ 6] == 1 );
		REQUIRE( test_value[ 7] == 0 );
		REQUIRE( test_value[ 8] == 1 );
		REQUIRE( test_value[ 9] == 1 );
		REQUIRE( test_value[10] == 1 );
		REQUIRE( test_value[11] == 0 );
		REQUIRE( test_value[12] == 1 );
		REQUIRE( test_value[13] == 0 );
		REQUIRE( test_value[14] == 0 );
		REQUIRE( test_value[15] == 1 );
		REQUIRE( test_value[16] == 0 );
		REQUIRE( test_value[17] == 1 );
		REQUIRE( test_value[18] == 1 );
		REQUIRE( test_value[19] == 0 );
		REQUIRE( test_value[20] == 0 );
		REQUIRE( test_value[21] == 1 );
		REQUIRE( test_value[22] == 0 );
		REQUIRE( test_value[23] == 1 );
		REQUIRE( test_value[24] == 0 );
		REQUIRE( test_value[25] == 1 );
		REQUIRE( test_value[26] == 0 );
		REQUIRE( test_value[27] == 1 );
		REQUIRE( test_value[28] == 0 );
		REQUIRE( test_value[29] == 1 );
		REQUIRE( test_value[30] == 0 );
		REQUIRE( test_value[31] == 0 );
		REQUIRE( test_value[32] == 0 );
		REQUIRE( test_value[33] == 0 );
		REQUIRE( test_value[34] == 0 );
		REQUIRE( test_value[35] == 1 );
		REQUIRE( test_value[36] == 1 );
		REQUIRE( test_value[37] == 1 );
		REQUIRE( test_value[38] == 0 );
		REQUIRE( test_value[39] == 1 );
		REQUIRE( test_value[40] == 0 );
		REQUIRE( test_value[41] == 1 );
		REQUIRE( test_value[42] == 1 );
		REQUIRE( test_value[43] == 1 );
	}
}

